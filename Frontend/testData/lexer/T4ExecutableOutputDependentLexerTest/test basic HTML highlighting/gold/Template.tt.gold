T4TokenType.DIRECTIVE_START             | <#@
WHITE_SPACE                             |  
T4TokenType.TOKEN                       | template
WHITE_SPACE                             |  
T4TokenType.TOKEN                       | language
T4TokenType.EQUAL                       | =
T4TokenType.QUOTE                       | "
T4TokenType.RAW_ATTRIBUTE_VALUE         | C#
T4TokenType.QUOTE                       | "
WHITE_SPACE                             |  
T4TokenType.BLOCK_END                   | #>
T4TokenType.NEW_LINE                    | \n
T4TokenType.DIRECTIVE_START             | <#@
WHITE_SPACE                             |  
T4TokenType.TOKEN                       | output
WHITE_SPACE                             |  
T4TokenType.TOKEN                       | extension
T4TokenType.EQUAL                       | =
T4TokenType.QUOTE                       | "
T4TokenType.RAW_ATTRIBUTE_VALUE         | html
T4TokenType.QUOTE                       | "
WHITE_SPACE                             |  
T4TokenType.BLOCK_END                   | #>
T4TokenType.NEW_LINE                    | \n
T4TokenType.STATEMENT_BLOCK_START       | <#
NEW_LINE                                | \n
WHITE_SPACE                             |   
STRING_KEYWORD                          | string
WHITE_SPACE                             |  
IDENTIFIER                              | title
WHITE_SPACE                             |  
EQ                                      | =
WHITE_SPACE                             |  
STRING_LITERAL_REGULAR                  | "My cool site"
SEMICOLON                               | ;
NEW_LINE                                | \n
WHITE_SPACE                             |   
STRING_KEYWORD                          | string
WHITE_SPACE                             |  
IDENTIFIER                              | functionName
WHITE_SPACE                             |  
EQ                                      | =
WHITE_SPACE                             |  
STRING_LITERAL_REGULAR                  | "helloJavaScript"
SEMICOLON                               | ;
NEW_LINE                                | \n
WHITE_SPACE                             |   
STRING_KEYWORD                          | string
WHITE_SPACE                             |  
IDENTIFIER                              | colour
WHITE_SPACE                             |  
EQ                                      | =
WHITE_SPACE                             |  
STRING_LITERAL_REGULAR                  | "red"
SEMICOLON                               | ;
NEW_LINE                                | \n
T4TokenType.BLOCK_END                   | #>
T4TokenType.NEW_LINE                    | \n
XML_START_TAG_START                     | <
XML_TAG_NAME                            | html
XML_TAG_END                             | >
T4TokenType.NEW_LINE                    | \n
XML_START_TAG_START                     | <
XML_TAG_NAME                            | head
XML_TAG_END                             | >
T4TokenType.NEW_LINE                    | \n
XML_WHITE_SPACE                         |   
XML_START_TAG_START                     | <
XML_TAG_NAME                            | title
XML_TAG_END                             | >
T4TokenType.NEW_LINE                    | \n
XML_WHITE_SPACE                         |     
T4TokenType.EXPRESSION_BLOCK_START      | <#=
WHITE_SPACE                             |  
IDENTIFIER                              | title
WHITE_SPACE                             |  
T4TokenType.BLOCK_END                   | #>
T4TokenType.NEW_LINE                    | \n
XML_WHITE_SPACE                         |   
XML_END_TAG_START                       | </
XML_TAG_NAME                            | title
XML_TAG_END                             | >
T4TokenType.NEW_LINE                    | \n
XML_WHITE_SPACE                         |   
XML_COMMENT_START                       | <!--
XML_COMMENT_CHARACTERS                  |  CSS and JavaScript syntax highlighting works out of the box :) 
XML_COMMENT_END                         | -->
T4TokenType.NEW_LINE                    | \n
XML_WHITE_SPACE                         |   
XML_START_TAG_START                     | <
XML_TAG_NAME                            | script
XML_TAG_END                             | >
T4TokenType.NEW_LINE                    | \n
WHITE_SPACE                             |     
CHARACTER                               | function
WHITESPACE                              |  
T4TokenType.EXPRESSION_BLOCK_START      | <#=
WHITE_SPACE                             |  
IDENTIFIER                              | functionName
WHITE_SPACE                             |  
T4TokenType.BLOCK_END                   | #>
L_PARENTH                               | (
R_PARENTH                               | )
WHITESPACE                              |  
L_BRACE                                 | {
T4TokenType.NEW_LINE                    | \n
WHITESPACE                              |       
CHARACTER                               | return
WHITESPACE                              |  
CHARACTER                               | this;
T4TokenType.NEW_LINE                    | \n
WHITESPACE                              |     
R_BRACE                                 | }
T4TokenType.NEW_LINE                    | \n
WHITESPACE                              |   
XML_END_TAG_START                       | </
XML_TAG_NAME                            | script
XML_TAG_END                             | >
T4TokenType.NEW_LINE                    | \n
XML_WHITE_SPACE                         |   
XML_START_TAG_START                     | <
XML_TAG_NAME                            | style
XML_TAG_END                             | >
T4TokenType.NEW_LINE                    | \n
WHITE_SPACE                             |     
IDENTIFIER                              | p
WHITESPACE                              |  
L_BRACE                                 | {
T4TokenType.NEW_LINE                    | \n
WHITESPACE                              |       
IDENTIFIER                              | color
PUNCTUATION                             | :
WHITESPACE                              |  
T4TokenType.EXPRESSION_BLOCK_START      | <#=
WHITE_SPACE                             |  
IDENTIFIER                              | colour
WHITE_SPACE                             |  
T4TokenType.BLOCK_END                   | #>
PUNCTUATION                             | ;
T4TokenType.NEW_LINE                    | \n
WHITESPACE                              |       
IDENTIFIER                              | text-align
PUNCTUATION                             | :
WHITESPACE                              |  
IDENTIFIER                              | center
PUNCTUATION                             | ;
T4TokenType.NEW_LINE                    | \n
WHITESPACE                              |     
R_BRACE                                 | }
T4TokenType.NEW_LINE                    | \n
WHITESPACE                              |   
XML_END_TAG_START                       | </
XML_TAG_NAME                            | style
XML_TAG_END                             | >
T4TokenType.NEW_LINE                    | \n
XML_END_TAG_START                       | </
XML_TAG_NAME                            | head
XML_TAG_END                             | >
T4TokenType.NEW_LINE                    | \n
XML_START_TAG_START                     | <
XML_TAG_NAME                            | body
TAG_WHITE_SPACE                         |  
XML_NAME                                | background
XML_EQ                                  | =
XML_ATTRIBUTE_VALUE_START_DELIMITER     | "
XML_ATTRIBUTE_VALUE_TOKEN               | black
XML_ATTRIBUTE_VALUE_END_DELIMITER       | "
XML_TAG_END                             | >
T4TokenType.NEW_LINE                    | \n
T4TokenType.STATEMENT_BLOCK_START       | <#
NEW_LINE                                | \n
WHITE_SPACE                             |     
FOR_KEYWORD                             | for
WHITE_SPACE                             |  
LPARENTH                                | (
INT_KEYWORD                             | int
WHITE_SPACE                             |  
IDENTIFIER                              | i
WHITE_SPACE                             |  
EQ                                      | =
WHITE_SPACE                             |  
INTEGER_LITERAL                         | 0
SEMICOLON                               | ;
WHITE_SPACE                             |  
IDENTIFIER                              | i
WHITE_SPACE                             |  
LT                                      | <
WHITE_SPACE                             |  
INTEGER_LITERAL                         | 10
SEMICOLON                               | ;
WHITE_SPACE                             |  
IDENTIFIER                              | i
WHITE_SPACE                             |  
PLUSEQ                                  | +=
WHITE_SPACE                             |  
INTEGER_LITERAL                         | 1
RPARENTH                                | )
NEW_LINE                                | \n
WHITE_SPACE                             |     
LBRACE                                  | {
NEW_LINE                                | \n
T4TokenType.BLOCK_END                   | #>
T4TokenType.NEW_LINE                    | \n
XML_WHITE_SPACE                         |   
XML_START_TAG_START                     | <
XML_TAG_NAME                            | span
TAG_WHITE_SPACE                         |  
XML_NAME                                | style
XML_EQ                                  | =
XML_ATTRIBUTE_VALUE_START_DELIMITER     | "
IDENTIFIER                              | font-weight
PUNCTUATION                             | :
IDENTIFIER                              | bold
XML_ATTRIBUTE_VALUE_END_DELIMITER       | "
XML_TAG_END                             | >
T4TokenType.NEW_LINE                    | \n
XML_WHITE_SPACE                         |     
XML_DATA_CHARACTERS                     | Hello
XML_WHITE_SPACE                         |  
XML_DATA_CHARACTERS                     | #
T4TokenType.EXPRESSION_BLOCK_START      | <#=
WHITE_SPACE                             |  
IDENTIFIER                              | i
WHITE_SPACE                             |  
T4TokenType.BLOCK_END                   | #>
XML_DATA_CHARACTERS                     | !
XML_START_TAG_START                     | <
XML_TAG_NAME                            | br
XML_TAG_END                             | >
T4TokenType.NEW_LINE                    | \n
XML_WHITE_SPACE                         |   
XML_END_TAG_START                       | </
XML_TAG_NAME                            | span
XML_TAG_END                             | >
T4TokenType.NEW_LINE                    | \n
T4TokenType.STATEMENT_BLOCK_START       | <#
NEW_LINE                                | \n
WHITE_SPACE                             |     
RBRACE                                  | }
NEW_LINE                                | \n
T4TokenType.BLOCK_END                   | #>
T4TokenType.NEW_LINE                    | \n
XML_END_TAG_START                       | </
XML_TAG_NAME                            | body
XML_TAG_END                             | >
T4TokenType.NEW_LINE                    | \n
XML_END_TAG_START                       | </
XML_TAG_NAME                            | html
XML_TAG_END                             | >
