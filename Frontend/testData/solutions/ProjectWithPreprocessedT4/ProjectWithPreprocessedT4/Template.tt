<#@ template language="C#" hostspecific="true" #>
<#@ assembly name="System.Core" #>
<#
	global::Microsoft.VisualStudio.TextTemplating.ITextTemplatingEngineHost proof5 = Host;
	global::JetBrains.Rider.TextTemplating.GeneratedTextTransformation proof6 = this;
	global::Microsoft.VisualStudio.TextTemplating.TextTransformation proof7 = this;
	global::System.Collections.Generic.IEnumerable<int> proof8 = global::System.Linq.Enumerable.Empty<int>();
#>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#= Meaning #>
<#
	global::Microsoft.VisualStudio.TextTemplating.ITextTemplatingEngineHost proof1 = Host;
	GeneratedTextTransformation proof2 = this;
	global::JetBrains.Rider.TextTemplating.TextTransformation proof3 = this;
	global::System.Collections.Generic.IEnumerable<int> proof4 = global::System.Linq.Enumerable.Empty<int>();
#>
<#+
	private static int Meaning
	{
		get
		{
			IEnumerable<int> e = new[] {32, 9, 1};
			return e.Sum();
		}
	}
#>